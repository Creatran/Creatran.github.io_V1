[{"authors":["Tianran"],"categories":null,"content":"I am currently a M.S. student majoring in Biostatistics and Data Science at Weill Cornell Medicine.\nMy interests lie in Data Science and I love dealing with data, especially investigating the intrinsic connection between variables by data wrangling with dplyr and data visualization with the help of ggplot2. I have some hands-on experience analyzing complex datasets using these packages and am looking forward to making more progress in the future!\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"0d5b918230a7ba3a0bd0337e9b0948dc","permalink":"/authors/tianran/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/tianran/","section":"authors","summary":"I am currently a M.S. student majoring in Biostatistics and Data Science at Weill Cornell Medicine.\nMy interests lie in Data Science and I love dealing with data, especially investigating the intrinsic connection between variables by data wrangling with dplyr and data visualization with the help of ggplot2. I have some hands-on experience analyzing complex datasets using these packages and am looking forward to making more progress in the future!","tags":null,"title":"Tianran Zhang","type":"authors"},{"authors":null,"categories":null,"content":"","date":1584057600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584057600,"objectID":"a0c6a0bb222c1e3a4a8074451af1078d","permalink":"/project/scr/","publishdate":"2020-03-13T00:00:00Z","relpermalink":"/project/scr/","section":"project","summary":"This is an educational use R package aims to help students get a better view of Rizzo's book 'Statistical Computing with R'.","tags":["R"],"title":"SCR Package","type":"project"},{"authors":null,"categories":null,"content":"","date":1575504000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575504000,"objectID":"d97a9e631ec37a135578175851fb7ffc","permalink":"/project/breastcanceranalysis/","publishdate":"2019-12-05T00:00:00Z","relpermalink":"/project/breastcanceranalysis/","section":"project","summary":"This project used PCA and KNN to extract 7 out of 32 nuclei features with a over 90% classification rate for breast cancer.","tags":["Python","ML"],"title":"Breast Cancer Analysis","type":"project"},{"authors":null,"categories":["Data Science Class","R plot"],"content":" ggplot2 is an R package created by Hadley Wickham. It has a great use in statistical data visulization. I got in touch with it in the first year of my graduate study and I had so much fun presenting statistical plot with the help of ggplot2! However, there are so many aesthetics and parameter settings in this package, and it is easy to mixed up. ggplot cheatsheet is always ready for help. I decided to summarise the most common used aesthetics of ggplot2 as well as how to make a qualified plot in statistics. Hope you may find this blog useful!\nPractical thins to make a plot better There are 8 criterions one has to meet in order to make a plot better:\n• Label the axis\n• Have a title\n• Make sure the title and axis are large enough\n• Label the plot or have a legend\n• Text on plots is great\n• Use color and fill effectively groups\n• Don’t make a plot overly complex – make two plots\n• Get rid of non-essentials\n Common used aesthetics Geom • geom_point() • geom_smooth() • geom_boxplot() • geom_bar() • geom_histogram() • geom_density() • geom_linerange() • geom_text() • geom_curve(x = , xend = , y = , yend = , arrow = arrow(length = unit(0.3, \u0026#39;cm \u0026#39;)), curvature = 0.5) • stat_function() Tips: if the variable is not continues, use bar graphs to display the distribution of categorical variables instead of histogram or density plot.\n THEME • theme(axis.text = element_text(), axis.tltle = element_text(), plot.title = element_text(), legend.position = , legend.title = element_blank(), axis.text.x = element_text(size = 10, angle = 90, hjust = 1, face = \u0026#39;bold\u0026#39;) • ylab(\u0026#39;) • xlab() • ggtitle(\u0026#39;)  GUIDES \u0026amp; LEGEND • guides() • ylim() • coord_trans() • coord_flip() • scale_y_continuous() • scale_y_discrete() • scale_color()  Tips: The only difference between coord_trans() and scale_y_continuous() is where the tick marks on the axis are drawn (scale_y_continuous has the tick more evenly)\n FACET • facet_wrap(~, nrow = ) • facet_grid(~, labeller = label_both)  COLOR • RColorBrewer  library(RColorBrewer)\ndisplay.brewer.all()\ng + scale_fill_brewer(palette = ‘Accent’, ‘Dark2’)\n• wesanderson  library(wesanderson)\nag + scale_fill_brewer(‘Zissou1’)\ng + scale_fill_manual(values = wes_palette(n = 3, name = ‘Zissou1’, ‘FantasticFox1’))\n  Examples ggplot is so powerful a tool that one can recreate almost any plot with R. Here is an excellent blog post from Rafa Irizarry on how to recreate plots using ggplot2 from blog Simply Statistics.\nOn Data Science class, we recreated a plot from a FiveThirtyEight blog. That interesting experience shows how useful ggplot2 is and I am writing this blog to show how we recreate that plot.\nData wrangling We used the make_babynames_dist() function in the mdsr package to add some more convenient variables to our dataset and to filter for only the data that is relevant to people alive in 2014.\nBabynamesDist \u0026lt;- make_babynames_dist() head(BabynamesDist) ## # A tibble: 6 x 9 ## year sex name n prop alive_prob count_thousands age_today ## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 1900 F Mary 16706 0.0526 0 16.7 114 ## 2 1900 F Helen 6343 0.0200 0 6.34 114 ## 3 1900 F Anna 6114 0.0192 0 6.11 114 ## 4 1900 F Marg… 5304 0.0167 0 5.30 114 ## 5 1900 F Ruth 4765 0.0150 0 4.76 114 ## 6 1900 F Eliz… 4096 0.0129 0 4.10 114 ## # … with 1 more variable: est_alive_today \u0026lt;dbl\u0026gt; We filtered the data so we only have babies with the name Joseph who are male.\njoseph \u0026lt;- BabynamesDist %\u0026gt;% filter(name == \u0026#39;Joseph\u0026#39; \u0026amp; sex == \u0026#39;M\u0026#39;)  Data visualization We ploted the number of Joseph’s born each year who are estimated to be alive on January 1, 2014. We will get that estimate by mutiplying the number of Josephs born in a year by the probability that a person from that year will be alive on January 1, 2014. We added the line for the number of Josephs born each year to our plot\nname_plot \u0026lt;- ggplot(data = joseph) + geom_bar(aes(x = year, y = count_thousands * alive_prob), stat = \u0026#39;identity\u0026#39;, fill = \u0026#39;#b2d7e9\u0026#39;, colour = \u0026#39;white\u0026#39;) + geom_line(aes(x = year, y = count_thousands), lwd = 1) + ylab(\u0026quot;Number of People (thousands)\u0026quot;) + xlab(NULL) + theme(axis.title = element_text(size = 16, face = \u0026quot;bold\u0026quot;)) name_plot Next we need to add a darker blue bar indicating the median year of birth for a Jospeh alive on January 1, 2014.\nmedian_yob \u0026lt;- with(joseph, wtd.quantile(year, est_alive_today, probs = .5)) name_plot \u0026lt;- name_plot + geom_bar(stat = \u0026#39;identity\u0026#39;, color = \u0026#39;white\u0026#39;, fill = \u0026#39;#008fd5\u0026#39;, aes(x = year, y = if_else(year == median_yob, est_alive_today/1000, 0))) name_plot Finally we updated the axis labels\nname_plot_2 \u0026lt;- name_plot + ggtitle(\u0026quot;Age Distribution of American Boys Joseph\u0026quot;) + geom_text(x = 1940, y = 30, label = \u0026quot;Number of Josephs \\n born each year\u0026quot;) + geom_text(x = 1929, y = 12, label = \u0026quot;Number of Josephs \\n born each year \\n estimated to be alive\u0026quot;, colour = \u0026quot;#b2d7e9\u0026quot;) + geom_text(x = 2003, y = 37, label = \u0026quot;The median \\nliving Joseoph \\n is 37 years old\u0026quot;, colour = \u0026quot;darkgray\u0026quot;)+ geom_curve(x = 1995, xend = 1974, y = 37, yend = 24, arrow = arrow(length = unit(.3, \u0026quot;cm\u0026quot;)), curvature = .5) + ylim(0, 40) + theme(plot.title = element_text(size = 22)) name_plot_2 We can also change the name to “Jessie” and the sex to “female”\nname_plot %+% filter(BabynamesDist, name == \u0026#39;Josephine\u0026#39; \u0026amp; sex == \u0026#39;F\u0026#39;)   ","date":1572134400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572134400,"objectID":"131fa0f37c1198fb03373419c0a4b2f1","permalink":"/post/ggplot2/","publishdate":"2019-10-27T00:00:00Z","relpermalink":"/post/ggplot2/","section":"post","summary":"ggplot2 is an R package created by Hadley Wickham. It has a great use in statistical data visulization. I got in touch with it in the first year of my graduate study and I had so much fun presenting statistical plot with the help of ggplot2! However, there are so many aesthetics and parameter settings in this package, and it is easy to mixed up. ggplot cheatsheet is always ready for help.","tags":["R"],"title":"ggplot2 - A Strong Package Used in Data Visulization","type":"post"},{"authors":null,"categories":["Data Science Class","R package"],"content":" R packages are strong tools in R coding. Whenever we code with R to do some complex data analyzing, R packages will always help. It is cool to make one’s R package to share code with others. I learned how to create an R package in the Data Science class and decided to write the procedure in this blog. I Hope it is helpful for you.\nReady to build your R package? Let’s start!\n1. Make a new project in a new directory In RStudio, go to File \u0026gt;\u0026gt; New Project. Select to make a new project in a new directory. Select the project type as an R Package.\nName the R Package, select the working directory where the R package will be in, and click ‘Create Package’.\nNow go to the directory and check out what you have!\nYou can see the same thing inside of RStudio:\n 2. Write your functions After you have created the package, install, and library these two packages:\nlibrary(devtools) library(roxygen2) Go to File \u0026gt;\u0026gt; New File \u0026gt;\u0026gt; R Script. In this R Script we will write to create an R file with a function for our package:\n# Sample function diamond_plot \u0026lt;- function(df, varx, vary){ ggplot(df, aes(x=get(varx), y=get(vary))) + geom_point(shape=23, fill=\u0026quot;blue\u0026quot;, color=\u0026quot;darkred\u0026quot;, size=3) } Once we are done writing the function, we will save this R Script as diamond_plot.R in the R folder of our package.\nLet’s take a look at what this function does.\n# Draw sample plot with the function. df.test \u0026lt;- data.frame(x = rnorm(10), y = rnorm(10)) diamond_plot(df.test, \u0026#39;x\u0026#39;, \u0026#39;y\u0026#39;)  3. Add documentation for your package. While you have the script diamond_plot.R open, go to Code \u0026gt;\u0026gt; Insert Roxygen Skeleton. Make sure your cursor is inside of the function when you do this.\nNow you can fill in your documentation.\nGo up a level to find the DESCRIPTION file, click on the DESCRIPTION file and edit it.\n 4. Add Data to your package Make a data folder.\nSave data in this folder using a .RData object.\n# Sample data sample_data \u0026lt;- data.frame(x = rnorm(10), y = rnorm(10), z = rnorm(10)) save(sample_data, file = \u0026#39;ExamplePackage/data/sample_data.RData\u0026#39;)   5. Install and Check the Packages Run the following code in the same working directory as the package.\ndocument() And then go down one level in the working directory and run the following code.\nsetwd(\u0026#39;..\u0026#39;) install(\u0026#39;ExamplePackage\u0026#39;)  6. Check what you got! Type the following commands in the console, and you can see the documentation of your package.\n?diamond_plot data(sample_data)  7. Upload and share your R Package with others. You can put your package on Github. Make a new repository with the same name as your package, and make it public.\nCongratulations! Now you can create your R package, install the package from the Github or give it to a friend to use with the following code.\ndevtools::install_github(\u0026#39;yourusername/ExamplePackage\u0026#39;)  ","date":1572134400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572134400,"objectID":"dc4f2b01efe4ca5633c066d1c4bd6c88","permalink":"/post/rpackage/","publishdate":"2019-10-27T00:00:00Z","relpermalink":"/post/rpackage/","section":"post","summary":"R packages are strong tools in R coding. Whenever we code with R to do some complex data analyzing, R packages will always help. It is cool to make one’s R package to share code with others. I learned how to create an R package in the Data Science class and decided to write the procedure in this blog. I Hope it is helpful for you.\nReady to build your R package?","tags":["R"],"title":"How to Create an R Package","type":"post"},{"authors":null,"categories":null,"content":"Me and my group designed a shiny app (I was mainly in charge of coding part in ui and server) for Happy Valley Meat Company to calculate and visualize the invironmental impact for each cut of meat as the midterm project in Data Science class. The shinyio website can be found here.\n","date":1572134400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572134400,"objectID":"40f139ddcdefc9064663a0e4a3752e3c","permalink":"/project/shanyapp/","publishdate":"2019-10-27T00:00:00Z","relpermalink":"/project/shanyapp/","section":"project","summary":"This project aims to visulize the environmental impact per cut weight for the happy velly meat company.","tags":["R"],"title":"Shiny App","type":"project"},{"authors":null,"categories":null,"content":"Apply the algorithm about 3D Free Form Deformation (FFD) with the toolkit VTK. Plus, utilizing the 3D Face Resruction model PRNet, we realize the workflow of 2D-Face -\u0026gt; 3D-Face -\u0026gt; 3D-FFD. It\u0026rsquo;s a course project about visualization, working with Jing Wang and Donghao Li. The report can be found here\n","date":1547510400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1547510400,"objectID":"5192cd6115e135b1af4025289f0830fe","permalink":"/project/ffd/","publishdate":"2019-01-15T00:00:00Z","relpermalink":"/project/ffd/","section":"project","summary":"This project aims to study the attention dynamics using flow network analysis.","tags":["Python"],"title":"FFD","type":"project"}]